{"version":3,"file":"static/js/50.6d7e1a5b.chunk.js","mappings":"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","sources":["components/BouquetItem/BouquetItem.styled.jsx","components/BouquetItem/BouquetItem.jsx","components/Catalog/Catalog.styled.jsx","components/Filters/Filters.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/FilterModal/FilterModal.jsx","components/Filters/Filters.jsx","components/Catalog/Catalog.jsx","pages/CatalogPage/CatalogPage.jsx","redux/bouquets/selectors.js","redux/cart/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BouquetWrapper = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid var(--main-pink-color);\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  padding: 10px;\n  width: 90%;\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 168px) / 2);\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: 1200px) {\n    flex-basis: calc((100% - 240px) / 3);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 300px;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledImg = styled.img`\n  width: 80%;\n`;\n\nexport const StyledTitle = styled.h2`\n  color: #e6b8ca;\n  text-align: center;\n  font-weight: 500;\n`;\n\nexport const DescrWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const StyledPrice = styled.p`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #e6b8ca;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 16px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: center;\n`;\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 20px;\n  background-color: #556b2f;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 20px;\n  &:hover {\n    background-color: #e6b8ca;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(25, 118, 210, 0.5);\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { addToCart, increaseQuantity } from 'redux/cart/cartProductsSlice';\nimport {\n  BouquetWrapper,\n  Button,\n  DescrWrapper,\n  ImgWrapper,\n  StyledDescription,\n  StyledImg,\n  StyledPrice,\n  StyledTitle,\n} from './BouquetItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCartProducts } from 'redux/cart/selectors';\n\nconst notiflixSuccessOptions = {\n  fontSize: '17px',\n  success: { background: '#e6b8ca', textColor: '#161616' },\n};\n\nexport const BouquetItem = ({ bouquet }) => {\n  const { url, price, description, name } = bouquet; // Destructure bouquet\n  const dispatch = useDispatch();\n  const cartProducts = useSelector(selectCartProducts);\n\n  const handleAddToCart = () => {\n    const existingProduct = cartProducts.find(item => item._id === bouquet._id);\n    console.log(existingProduct);\n\n    if (existingProduct) {\n      dispatch(\n        increaseQuantity({\n          _id: existingProduct._id,\n          quantity: existingProduct.quantity + 1,\n        })\n      );\n      Notiflix.Notify.success(\n        `You now have ${existingProduct.quantity + 1} ${\n          existingProduct.name\n        } in your cart!`,\n        notiflixSuccessOptions\n      );\n    } else {\n      dispatch(addToCart({ ...bouquet, quantity: 1 }));\n      Notiflix.Notify.success(\n        `${bouquet.name} added to cart successfully`,\n        notiflixSuccessOptions\n      );\n    }\n  };\n\n  return (\n    <BouquetWrapper>\n      <ImgWrapper>\n        <StyledImg src={url} alt={name} />{' '}\n      </ImgWrapper>\n      <DescrWrapper>\n        <StyledTitle>{name}</StyledTitle>\n        <StyledPrice>{price} €</StyledPrice>\n        <StyledDescription>{description}</StyledDescription>\n      </DescrWrapper>\n      <Button onClick={() => handleAddToCart(bouquet)}>Add to cart</Button>\n    </BouquetWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CatalogWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  margin: 0 auto;\n  margin-bottom: 80px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const LoadingText = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: 400;\n  width: 340px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 600px;\n  }\n`;\n","import { Form } from 'formik';\nimport { VscFilter } from 'react-icons/vsc';\nimport styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background-color: #f7f7f7;\n  border-radius: 8px;\n  padding: 10px 20px;\n  margin-bottom: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n    margin-bottom: 50px;\n  }\n`;\nexport const FilterIconWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 5px;\n\n  @media screen and (min-width: 1200px) {\n    display: none;\n  }\n`;\n\nexport const FilterButton = styled.button`\n  width: 30px;\n  height: 30px;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const FilterIcon = styled(VscFilter)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: none;\n\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    gap: 30px;\n    align-items: center;\n  }\n`;\nexport const SubmitButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: var(--main-pink-color);\n  }\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  select {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    outline: none;\n  }\n`;\nexport const ResetButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: var(--main-transition);\n\n  &:hover {\n    background-color: var(--main-pink-color);\n  }\n`;\n","import styled from 'styled-components';\nimport { IoClose } from 'react-icons/io5';\nimport { Form } from 'formik';\n\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(177, 177, 177, 0.5);\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  z-index: 20px;\n  width: 300px;\n  border: 1px solid var(--main-green-color);\n  border-radius: 8px;\n  background-color: #f7f7f7;\n\n  @media screen and (min-width: 320px) and (max-width: 375px) {\n    width: 90%;\n  }\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  padding: 24px;\n`;\n\nexport const CloseIcon = styled(IoClose)`\n  font-size: 24px;\n  fill: var(--main-dark-text-color);\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  select {\n    width: 180px;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    outline: none;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const SubmitButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const ResetButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport { Formik, Field } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  BackDrop,\n  Modal,\n  CloseIcon,\n  ModalContainer,\n  FormGroup,\n  StyledForm,\n  ButtonsWrapper,\n  SubmitButton,\n  ResetButton,\n} from './FilterModal.styled';\n\nconst flowerTypes = [\n  'Roses',\n  'Daisies',\n  'Tulips',\n  'Sunflowers',\n  'Daffodils',\n  'Lilies',\n  'Carnations',\n  'Chrysanthemums',\n  'Lavender',\n  'Irises',\n  'Peonies',\n  'Violets',\n  'Hyacinths',\n  'Hydrangeas',\n  'Cornflowers',\n  'Delphiniums',\n];\n\nexport const FilterModal = ({ onClose, onFilter, filters, onReset }) => {\n  useEffect(() => {\n    const handleCloseOnKeydown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleCloseOnKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseOnKeydown);\n    };\n  }, [onClose]);\n\n  const handleCloseOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleSubmit = values => {\n    onFilter(values);\n  };\n\n  const handleReset = () => {\n    onReset();\n    onClose();\n  };\n\n  return (\n    <BackDrop onClick={handleCloseOnBackdrop}>\n      <Modal>\n        <ModalContainer>\n          <CloseIcon onClick={onClose} />\n\n          <Formik initialValues={filters} onSubmit={handleSubmit}>\n            {({ values, setFieldValue, resetForm }) => (\n              <StyledForm>\n                <FormGroup>\n                  <label htmlFor=\"flowerType\">Flower Type:</label>\n                  <Field\n                    as=\"select\"\n                    name=\"flowerType\"\n                    onChange={e => setFieldValue('flowerType', e.target.value)}\n                  >\n                    <option value=\"\">All</option>\n                    {flowerTypes.map(type => (\n                      <option key={nanoid()} value={type}>\n                        {type}\n                      </option>\n                    ))}\n                  </Field>\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor=\"sortByPrice\">Price:</label>\n                  <Field\n                    as=\"select\"\n                    name=\"sortByPrice\"\n                    onChange={e => setFieldValue('sortByPrice', e.target.value)}\n                  >\n                    <option value=\"\"></option>\n                    <option value=\"asc\">Ascending</option>\n                    <option value=\"desc\">Descending</option>\n                  </Field>\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor=\"bouquetType\">Bouquet Type:</label>\n                  <Field\n                    as=\"select\"\n                    name=\"bouquetType\"\n                    onChange={e => setFieldValue('bouquetType', e.target.value)}\n                  >\n                    <option value=\"\">All</option>\n                    <option value=\"everyday\">Everyday</option>\n                    <option value=\"wedding\">Wedding</option>\n                    <option value=\"spring\">Spring</option>\n                  </Field>\n                </FormGroup>\n                <ButtonsWrapper>\n                  <SubmitButton type=\"submit\">Apply Filters</SubmitButton>\n                  <ResetButton type=\"button\" onClick={handleReset}>\n                    Reset Filters\n                  </ResetButton>\n                </ButtonsWrapper>\n              </StyledForm>\n            )}\n          </Formik>\n        </ModalContainer>\n      </Modal>\n    </BackDrop>\n  );\n};\n","// В компоненте Filters\nimport React, { useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  FilterIconWrapper,\n  FilterButton,\n  FilterIcon,\n  FormGroup,\n  SubmitButton,\n  FilterWrapper,\n  StyledForm,\n  ResetButton,\n} from './Filters.styled';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\n\nconst flowerTypes = [\n  'Roses',\n  'Daisies',\n  'Tulips',\n  'Sunflowers',\n  'Daffodils',\n  'Lilies',\n  'Carnations',\n  'Chrysanthemums',\n  'Lavender',\n  'Irises',\n  'Peonies',\n  'Violets',\n  'Hyacinths',\n  'Hydrangeas',\n  'Cornflowers',\n  'Delphiniums',\n];\n\nexport const Filters = ({ onFilter, filters, onReset }) => {\n  const [isFilterModalOpen, setIsFilterModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsFilterModalOpen(!isFilterModalOpen);\n  };\n\n  const handleSubmit = values => {\n    onFilter(values);\n  };\n\n  return (\n    <>\n      <FilterWrapper>\n        <FilterIconWrapper>\n          <FilterButton onClick={handleOpenModal}>\n            <FilterIcon />\n          </FilterButton>\n          Filters\n        </FilterIconWrapper>\n        <Formik initialValues={filters} onSubmit={handleSubmit}>\n          {({ values, setFieldValue, resetForm }) => (\n            <StyledForm>\n              <FormGroup>\n                <label htmlFor=\"flowerType\">Flower Type:</label>\n                <Field\n                  as=\"select\"\n                  name=\"flowerType\"\n                  onChange={e => setFieldValue('flowerType', e.target.value)}\n                >\n                  <option value=\"\">All</option>\n                  {flowerTypes.map(type => (\n                    <option key={nanoid()} value={type}>\n                      {type}\n                    </option>\n                  ))}\n                </Field>\n              </FormGroup>\n              <FormGroup>\n                <label htmlFor=\"sortByPrice\">Price:</label>\n                <Field\n                  as=\"select\"\n                  name=\"sortByPrice\"\n                  onChange={e => setFieldValue('sortByPrice', e.target.value)}\n                >\n                  <option value=\"\"></option>\n                  <option value=\"asc\">Ascending</option>\n                  <option value=\"desc\">Descending</option>\n                </Field>\n              </FormGroup>\n              <FormGroup>\n                <label htmlFor=\"bouquetType\">Bouquet Type:</label>\n                <Field\n                  as=\"select\"\n                  name=\"bouquetType\"\n                  onChange={e => setFieldValue('bouquetType', e.target.value)}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"everyday\">Everyday</option>\n                  <option value=\"wedding\">Wedding</option>\n                  <option value=\"spring\">Spring</option>\n                </Field>\n              </FormGroup>\n              <SubmitButton type=\"submit\">Apply Filters</SubmitButton>\n              <ResetButton type=\"submit\" onClick={resetForm}>\n                Reset Filters\n              </ResetButton>\n            </StyledForm>\n          )}\n        </Formik>\n      </FilterWrapper>\n      {isFilterModalOpen && (\n        <FilterModal\n          onFilter={onFilter}\n          filters={filters}\n          onClose={handleOpenModal}\n          onReset={onReset}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { BouquetItem } from 'components/BouquetItem/BouquetItem';\nimport { CatalogWrapper, LoadingText } from './Catalog.styled';\nimport { nanoid } from 'nanoid';\nimport { fetchBouquets } from 'redux/bouquets/operations';\nimport { selectAllBouquets, selectIsLoading } from 'redux/bouquets/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filters } from 'components/Filters/Filters';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Catalog = () => {\n  const dispatch = useDispatch();\n  const bouquets = useSelector(selectAllBouquets);\n  const isLoading = useSelector(selectIsLoading);\n  const [filters, setFilters] = useState({\n    flowerType: '',\n    sortByPrice: '',\n    bouquetType: '',\n  });\n\n  useEffect(() => {\n    dispatch(fetchBouquets());\n  }, [dispatch]);\n\n  const applyFilters = ({ flowerType, sortByPrice, bouquetType }) => {\n    setFilters({ flowerType, sortByPrice, bouquetType });\n  };\n\n  const handleReset = () => {\n    setFilters({\n      flowerType: '',\n      sortByPrice: '',\n      bouquetType: '',\n    });\n  };\n\n  const filteredBouquets = bouquets\n    .filter(bouquet => {\n      if (\n        filters.flowerType &&\n        !bouquet.composition.includes(filters.flowerType)\n      ) {\n        return false;\n      }\n      if (filters.bouquetType && bouquet.type !== filters.bouquetType) {\n        return false;\n      }\n      return true;\n    })\n    .sort((a, b) => {\n      if (filters.sortByPrice === 'asc') {\n        return a.price - b.price;\n      } else if (filters.sortByPrice === 'desc') {\n        return b.price - a.price;\n      } else {\n        return 0;\n      }\n    });\n\n  return (\n    <section>\n      <Filters\n        onFilter={applyFilters}\n        filters={filters}\n        onReset={handleReset}\n      />\n      {isLoading ? (\n        <LoadingText>\n          Please wait. Collection of bouquets is loading...{' '}\n          <Loader width={80} height={80} />\n        </LoadingText>\n      ) : (\n        <CatalogWrapper>\n          {filteredBouquets.map(bouquet => (\n            <BouquetItem key={nanoid()} bouquet={bouquet} />\n          ))}\n        </CatalogWrapper>\n      )}\n    </section>\n  );\n};\n","import { Catalog } from 'components/Catalog/Catalog';\n\nexport default function CatalogPage() {\n  return <Catalog />;\n}\n","export const selectAllBouquets = state => state.bouquets.bouquets;\nexport const selectIsLoading = state => state.bouquets.isLoading;\n","export const selectCartProducts = state => state.cartProducts.products;\n"],"names":["BouquetWrapper","styled","ImgWrapper","StyledImg","StyledTitle","DescrWrapper","StyledPrice","StyledDescription","Button","notiflixSuccessOptions","fontSize","success","background","textColor","BouquetItem","bouquet","url","price","description","name","dispatch","useDispatch","cartProducts","useSelector","selectCartProducts","src","alt","onClick","existingProduct","find","item","_id","console","log","increaseQuantity","quantity","Notiflix","addToCart","handleAddToCart","CatalogWrapper","LoadingText","FilterWrapper","FilterIconWrapper","FilterButton","FilterIcon","VscFilter","StyledForm","Form","SubmitButton","FormGroup","ResetButton","BackDrop","Modal","ModalContainer","CloseIcon","IoClose","ButtonsWrapper","flowerTypes","FilterModal","onClose","onFilter","filters","onReset","useEffect","handleCloseOnKeydown","e","key","window","addEventListener","removeEventListener","handleReset","target","currentTarget","initialValues","onSubmit","values","setFieldValue","resetForm","htmlFor","as","onChange","value","map","type","nanoid","Filters","useState","isFilterModalOpen","setIsFilterModalOpen","handleOpenModal","Catalog","bouquets","selectAllBouquets","isLoading","selectIsLoading","flowerType","sortByPrice","bouquetType","setFilters","fetchBouquets","filteredBouquets","filter","composition","includes","sort","a","b","Loader","width","height","CatalogPage","state","products"],"sourceRoot":""}