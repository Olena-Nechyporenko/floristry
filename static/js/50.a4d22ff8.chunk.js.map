{"version":3,"file":"static/js/50.a4d22ff8.chunk.js","mappings":"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","sources":["components/BouquetItem/BouquetItem.styled.jsx","components/BouquetItem/BouquetItem.jsx","components/Catalog/Catalog.styled.jsx","components/Filters/Filters.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/FilterModal/FilterModal.jsx","components/Filters/Filters.jsx","components/Catalog/Catalog.jsx","pages/CatalogPage/CatalogPage.jsx","redux/bouquets/selectors.js","redux/cart/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BouquetWrapper = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid var(--main-pink-color);\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  padding: 10px;\n  width: 90%;\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 168px) / 2);\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: 1200px) {\n    flex-basis: calc((100% - 240px) / 3);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 300px;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledImg = styled.img`\n  width: 80%;\n`;\n\nexport const StyledTitle = styled.h2`\n  color: var(--main-pink-color);\n  text-align: center;\n  font-weight: 500;\n`;\n\nexport const DescrWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const StyledPrice = styled.p`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: var(--main-pink-color);\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 16px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: center;\n`;\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 20px;\n  background-color: var(--main-green-color);\n  color: var(--main-light-text-color);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 20px;\n\n  &:hover {\n    background-color: var(--main-pink-color);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(25, 118, 210, 0.5);\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { addToCart, increaseQuantity } from 'redux/cart/cartProductsSlice';\nimport {\n  BouquetWrapper,\n  Button,\n  DescrWrapper,\n  ImgWrapper,\n  StyledDescription,\n  StyledImg,\n  StyledPrice,\n  StyledTitle,\n} from './BouquetItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCartProducts } from 'redux/cart/selectors';\n\nconst notiflixSuccessOptions = {\n  fontSize: '17px',\n  success: { background: '#e6b8ca', textColor: '#161616' },\n};\n\nexport const BouquetItem = ({ bouquet }) => {\n  const { url, price, description, name } = bouquet; // Destructure bouquet\n  const dispatch = useDispatch();\n  const cartProducts = useSelector(selectCartProducts);\n\n  const handleAddToCart = () => {\n    const existingProduct = cartProducts.find(item => item._id === bouquet._id);\n    console.log(existingProduct);\n\n    if (existingProduct) {\n      dispatch(\n        increaseQuantity({\n          _id: existingProduct._id,\n          quantity: existingProduct.quantity + 1,\n        })\n      );\n      Notiflix.Notify.success(\n        `You now have ${existingProduct.quantity + 1} ${\n          existingProduct.name\n        } in your cart!`,\n        notiflixSuccessOptions\n      );\n    } else {\n      dispatch(addToCart({ ...bouquet, quantity: 1 }));\n      Notiflix.Notify.success(\n        `${bouquet.name} added to cart successfully`,\n        notiflixSuccessOptions\n      );\n    }\n  };\n\n  return (\n    <BouquetWrapper>\n      <ImgWrapper>\n        <StyledImg src={url} alt={name} />{' '}\n      </ImgWrapper>\n      <DescrWrapper>\n        <StyledTitle>{name}</StyledTitle>\n        <StyledPrice>{price} â‚¬</StyledPrice>\n        <StyledDescription>{description}</StyledDescription>\n      </DescrWrapper>\n      <Button onClick={() => handleAddToCart(bouquet)}>Add to cart</Button>\n    </BouquetWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CatalogWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  margin: 0 auto;\n  margin-bottom: 80px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const LoadingText = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: 400;\n  width: 340px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 600px;\n  }\n`;\n","import { Form } from 'formik';\nimport { VscFilter } from 'react-icons/vsc';\nimport styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background-color: #f7f7f7;\n  border-radius: 8px;\n  padding: 10px 20px;\n  margin-bottom: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const FilterIconWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 5px;\n\n  @media screen and (min-width: 1200px) {\n    display: none;\n  }\n`;\n\nexport const FilterButton = styled.button`\n  width: 30px;\n  height: 30px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const FilterIcon = styled(VscFilter)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: none;\n\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    gap: 30px;\n    align-items: center;\n  }\n`;\nexport const SubmitButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: var(--main-light-text-color);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: var(--main-pink-color);\n  }\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  select {\n    width: 100%;\n    overflow-y: auto;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    outline: none;\n  }\n`;\n\nexport const ResetButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: var(--main-light-text-color);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: var(--main-transition);\n\n  &:hover {\n    background-color: var(--main-pink-color);\n  }\n`;\n","import styled from 'styled-components';\nimport { IoClose } from 'react-icons/io5';\nimport { Form } from 'formik';\n\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(177, 177, 177, 0.5);\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  z-index: 20px;\n  width: 300px;\n  border: 1px solid var(--main-green-color);\n  border-radius: 8px;\n  background-color: #f7f7f7;\n\n  @media screen and (min-width: 320px) and (max-width: 375px) {\n    width: 90%;\n  }\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  padding: 24px;\n`;\n\nexport const CloseIcon = styled(IoClose)`\n  font-size: 24px;\n  fill: var(--main-dark-text-color);\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  select {\n    width: 180px;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    outline: none;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const SubmitButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: var(--main-light-text-color);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const ResetButton = styled.button`\n  font-family: inherit;\n  font-weight: 400;\n  padding: 10px 15px;\n  height: 50px;\n  background-color: var(--main-green-color);\n  color: var(--main-light-text-color);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport { Formik, Field } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  BackDrop,\n  Modal,\n  CloseIcon,\n  ModalContainer,\n  FormGroup,\n  StyledForm,\n  ButtonsWrapper,\n  SubmitButton,\n  ResetButton,\n} from './FilterModal.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilters } from 'redux/bouquets/bouquetSlice';\nimport { selectFilters } from 'redux/bouquets/selectors';\n\nconst flowerTypes = [\n  'Roses',\n  'Daisies',\n  'Tulips',\n  'Sunflowers',\n  'Daffodils',\n  'Lilies',\n  'Carnations',\n  'Chrysanthemums',\n  'Lavender',\n  'Irises',\n  'Peonies',\n  'Violets',\n  'Hyacinths',\n  'Hydrangeas',\n  'Cornflowers',\n  'Delphiniums',\n];\n\nexport const FilterModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(selectFilters);\n\n  useEffect(() => {\n    const handleCloseOnKeydown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleCloseOnKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseOnKeydown);\n    };\n  }, [onClose]);\n\n  const handleCloseOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleSubmit = values => {\n    dispatch(\n      setFilters({\n        flowerType: values.flowerType,\n        price: values.price,\n        bouquetType: values.bouquetType,\n      })\n    );\n  };\n\n  const resetFilters = () => {\n    dispatch(setFilters({ flowerType: '', price: '', bouquetType: '' }));\n    onClose();\n  };\n\n  return (\n    <BackDrop onClick={handleCloseOnBackdrop}>\n      <Modal>\n        <ModalContainer>\n          <CloseIcon onClick={onClose} />\n\n          <Formik\n            initialValues={{\n              flowerType: filters.flowerType,\n              price: filters.price,\n              bouquetType: filters.bouquetType,\n            }}\n            onSubmit={handleSubmit}\n          >\n            {({ values, resetForm }) => (\n              <StyledForm>\n                <FormGroup>\n                  <label htmlFor=\"flowerType\">Flower Type:</label>\n                  <Field as=\"select\" name=\"flowerType\">\n                    <option value=\"\">All</option>\n                    {flowerTypes.map(type => (\n                      <option key={nanoid()} value={type}>\n                        {type}\n                      </option>\n                    ))}\n                  </Field>\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor=\"price\">Price:</label>\n                  <Field as=\"select\" name=\"price\">\n                    <option value=\"\"></option>\n                    <option value=\"asc\">Ascending</option>\n                    <option value=\"desc\">Descending</option>\n                  </Field>\n                </FormGroup>\n                <FormGroup>\n                  <label htmlFor=\"bouquetType\">Bouquet Type:</label>\n                  <Field as=\"select\" name=\"bouquetType\">\n                    <option value=\"\">All</option>\n                    <option value=\"everyday\">Everyday</option>\n                    <option value=\"wedding\">Wedding</option>\n                    <option value=\"spring\">Spring</option>\n                  </Field>\n                </FormGroup>\n                <ButtonsWrapper>\n                  <SubmitButton type=\"submit\">Apply Filters</SubmitButton>\n                  <ResetButton type=\"button\" onClick={resetFilters}>\n                    Reset Filters\n                  </ResetButton>\n                </ButtonsWrapper>\n              </StyledForm>\n            )}\n          </Formik>\n        </ModalContainer>\n      </Modal>\n    </BackDrop>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  FilterIconWrapper,\n  FilterButton,\n  FilterIcon,\n  FormGroup,\n  SubmitButton,\n  FilterWrapper,\n  StyledForm,\n  ResetButton,\n} from './Filters.styled';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\nimport { setFilters } from 'redux/bouquets/bouquetSlice';\nimport { useDispatch } from 'react-redux';\n\nconst flowerTypes = [\n  'Roses',\n  'Daisies',\n  'Tulips',\n  'Sunflowers',\n  'Daffodils',\n  'Lilies',\n  'Carnations',\n  'Chrysanthemums',\n  'Lavender',\n  'Irises',\n  'Peonies',\n  'Violets',\n  'Hyacinths',\n  'Hydrangeas',\n  'Cornflowers',\n  'Delphiniums',\n];\n\nconst initialValues = {\n  flowerType: '',\n  price: '',\n  bouquetType: '',\n};\n\nexport const Filters = () => {\n  const [isFilterModalOpen, setIsFilterModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setIsFilterModalOpen(!isFilterModalOpen);\n  };\n\n  const handleSubmit = values => {\n    dispatch(\n      setFilters({\n        flowerType: values.flowerType,\n        price: values.price,\n        bouquetType: values.bouquetType,\n      })\n    );\n  };\n\n  return (\n    <>\n      <FilterWrapper>\n        <FilterIconWrapper onClick={handleOpenModal}>\n          <FilterButton>\n            <FilterIcon />\n          </FilterButton>\n          Filters\n        </FilterIconWrapper>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n          {({ values, handleSubmit, resetForm }) => (\n            <StyledForm>\n              <FormGroup>\n                <label htmlFor=\"flowerType\">Flower Type:</label>\n                <Field as=\"select\" name=\"flowerType\">\n                  <option value=\"\">All</option>\n                  {flowerTypes.map(type => (\n                    <option key={nanoid()} value={type}>\n                      {type}\n                    </option>\n                  ))}\n                </Field>\n              </FormGroup>\n              <FormGroup>\n                <label htmlFor=\"price\">Price:</label>\n                <Field as=\"select\" name=\"price\">\n                  <option value=\"\"></option>\n                  <option value=\"asc\">Ascending</option>\n                  <option value=\"desc\">Descending</option>\n                </Field>\n              </FormGroup>\n              <FormGroup>\n                <label htmlFor=\"bouquetType\">Bouquet Type:</label>\n                <Field as=\"select\" name=\"bouquetType\">\n                  <option value=\"\">All</option>\n                  <option value=\"everyday\">Everyday</option>\n                  <option value=\"wedding\">Wedding</option>\n                  <option value=\"spring\">Spring</option>\n                </Field>\n              </FormGroup>\n              <SubmitButton type=\"submit\">Apply Filters</SubmitButton>\n              <ResetButton type=\"submit\" onClick={resetForm}>\n                Reset Filters\n              </ResetButton>\n            </StyledForm>\n          )}\n        </Formik>\n      </FilterWrapper>\n      {isFilterModalOpen && <FilterModal onClose={handleOpenModal} />}\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { BouquetItem } from 'components/BouquetItem/BouquetItem';\nimport { CatalogWrapper, LoadingText } from './Catalog.styled';\nimport { nanoid } from 'nanoid';\nimport { fetchBouquets } from 'redux/bouquets/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filters } from 'components/Filters/Filters';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  selectFilteredBouquets,\n  selectIsLoading,\n} from 'redux/bouquets/selectors';\n\nexport const Catalog = () => {\n  const dispatch = useDispatch();\n  const filteredBouquets = useSelector(selectFilteredBouquets);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchBouquets());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <Filters />\n      {isLoading ? (\n        <LoadingText>\n          Please wait. Collection of bouquets is loading...{' '}\n          <Loader width={80} height={80} />\n        </LoadingText>\n      ) : (\n        <CatalogWrapper>\n          {filteredBouquets.map(bouquet => (\n            <BouquetItem key={nanoid()} bouquet={bouquet} />\n          ))}\n        </CatalogWrapper>\n      )}\n    </section>\n  );\n};\n","import { Catalog } from 'components/Catalog/Catalog';\n\nexport default function CatalogPage() {\n  return <Catalog />;\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectAllBouquets = state => state.bouquets.bouquets;\nexport const selectIsLoading = state => state.bouquets.isLoading;\nexport const selectFilters = state => state.bouquets.filters;\n\nexport const selectFilteredBouquets = createSelector(\n  [selectFilters, selectAllBouquets],\n  (filters, bouquets) => {\n    return bouquets\n      .filter(bouquet => {\n        if (\n          filters.flowerType &&\n          !bouquet.composition.includes(filters.flowerType)\n        ) {\n          return false;\n        }\n        if (filters.bouquetType && bouquet.type !== filters.bouquetType) {\n          return false;\n        }\n        return true;\n      })\n      .sort((a, b) => {\n        if (filters.price === 'asc') {\n          return a.price - b.price;\n        } else if (filters.price === 'desc') {\n          return b.price - a.price;\n        } else {\n          return 0;\n        }\n      });\n  }\n);\n","export const selectCartProducts = state => state.cartProducts.products;\n"],"names":["BouquetWrapper","styled","ImgWrapper","StyledImg","StyledTitle","DescrWrapper","StyledPrice","StyledDescription","Button","notiflixSuccessOptions","fontSize","success","background","textColor","BouquetItem","bouquet","url","price","description","name","dispatch","useDispatch","cartProducts","useSelector","selectCartProducts","src","alt","onClick","existingProduct","find","item","_id","console","log","increaseQuantity","quantity","Notiflix","addToCart","handleAddToCart","CatalogWrapper","LoadingText","FilterWrapper","FilterIconWrapper","FilterButton","FilterIcon","VscFilter","StyledForm","Form","SubmitButton","FormGroup","ResetButton","BackDrop","Modal","ModalContainer","CloseIcon","IoClose","ButtonsWrapper","flowerTypes","FilterModal","onClose","filters","selectFilters","useEffect","handleCloseOnKeydown","e","key","window","addEventListener","removeEventListener","resetFilters","setFilters","flowerType","bouquetType","target","currentTarget","initialValues","onSubmit","values","resetForm","htmlFor","as","value","map","type","nanoid","Filters","useState","isFilterModalOpen","setIsFilterModalOpen","handleOpenModal","handleSubmit","Catalog","filteredBouquets","selectFilteredBouquets","isLoading","selectIsLoading","fetchBouquets","Loader","width","height","CatalogPage","selectAllBouquets","state","bouquets","createSelector","filter","composition","includes","sort","a","b","products"],"sourceRoot":""}